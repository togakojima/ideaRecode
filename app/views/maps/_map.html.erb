
<!-- マップを表示する要素 -->
<div id="map" class="maps"></div>

<div class="map-info">
  <div class="new-map">
    <%= link_to 'New Map!', new_map_path %>
  </div>

  <div class="map-titles">
    <ul>
      <% @maps.each do |map| %>
        <div class="map-title">
          <%= link_to map.title, "#", 
              class: "map-link", 
              data: { lat: map.latitude, lng: map.longitude } %>
        </div>
      <% end %> 
    </ul>
  </div>
</div>

<script>
  function initMap() {
    const center = { lat: 35.41151123572196, lng: 136.75974330995982 };

    const styles = [
      {
        stylers: [{
          saturation: -25
        }]
      }
    ];
    const mapOptions = {
      center: center,
      zoom: 17,
      styles: styles
    };

    const map = new google.maps.Map(document.getElementById('map'), mapOptions);

    const maps = <%= raw @maps.to_json(only: [:latitude, :longitude, :title, :info]) %>;

    let currentInfoWindow = null; // 現在開いている情報ウィンドウを保持

    maps.forEach((mapData) => {
      const lat = parseFloat(mapData.latitude);
      const lng = parseFloat(mapData.longitude);
      const marker = new google.maps.Marker({
        position: { lat, lng },
        map: map,
        icon: { url: '/img/orange-circle.png', scaledSize : new google.maps.Size(50, 50) },
        title: mapData.title
      });

      const infoWindow = new google.maps.InfoWindow({
        content: `<div class="title-name">${mapData.title}</div><p>${mapData.info}</p><p><a href="https://www.google.com/maps/dir/?api=1&destination=${mapData.latitude},${mapData.longitude}" target="_blank", class="maplink">ルート検索</a></p>`
      });

      marker.addListener('click', () => {
        // 前に開いていたウィンドウがあれば閉じる
        if (currentInfoWindow) {
          currentInfoWindow.close();
        }
        // 開いたウィンドウを currentInfoWindow に保存
        currentInfoWindow = infoWindow;

        infoWindow.open(map, marker);
      });
    });

     // マップリンクにイベント付与
    document.querySelectorAll('.map-link').forEach((link) => {
      link.addEventListener('click', (event) => {
        const lat = parseFloat(event.target.dataset.lat);
        const lng = parseFloat(event.target.dataset.lng);

        map.setCenter(new google.maps.LatLng(lat, lng));

        event.preventDefault();
      });
    });
  }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV["GOOGLE_MAPS_API_KEY"] %>&callback=initMap" async defer></script>